# MySQL

    # Show tables containing particular column names

    SELECT DISTINCT TABLE_NAME
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE COLUMN_NAME IN ('col_name')
    AND TABLE_SCHEMA = 'db_name';

    # Show tables with > 0 rows (estimated from indices)

    SELECT TABLE_NAME,TABLE_ROWS
    FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA = 'db_name'
    AND TABLE_ROWS > 0;

    # Script-friendly output

    mysql -sN \
    -u db_user -pdb_pass \
    -h db_host \
    db_name \
    -e "SELECT col FROM table"

# PostgreSQL

    # Size of databases

    SELECT
    pg_database.datname,
    pg_size_pretty(pg_database_size(pg_database.datname)) AS size
    FROM pg_database;

# BSD sed

    # Substitution

    sed -i '' 's/old/new/g' file

    # Groups in sed

    sed -n 's|text\(.*\)othertext|\1|p' ~/the/file

# Command line uuid

    uuidgen | tr "[:upper:]" "[:lower:]"

# Poor Man's CLOC (Count Lines of Code)

    # BSD find

    find -E . -type f -not -path "./.git*" -not path "./target*" -regex '.*\.(java|y[a]*ml|xml|properties|sql)' | xargs wc -l

# Sonar

    docker container stop sonar; docker container rm sonar
    docker run -d -p 9000:9000 --name sonar sonarqube:8.7-community
    until curl -v --connect-timeout 100 http://localhost:9000/api/system/status | grep -w UP; do sleep 10; done
    curl -v --connect-timeout 100 -u admin:admin -X POST 'http://localhost:9000/api/users/change_password?login=admin&previousPassword=admin&password=password'
    ./gradlew --info clean build sonarqube -Dsonar.login=admin -Dsonar.password=password

# Docker

    # Remove intermediate <none> images

    docker rmi $(docker images -f dangling=true -q)

    # With AWS creds

    docker build --tag <name>:<label> . && docker run --rm -v ~/.aws/credentials:/home/user/.aws/credentials:ro <name>:<label> CMD <options>

# Sublime

    # Select regex matching group

    (?<=PrecedingTextPattern)TextYouWantToSelectUsually.*(?=OtherText)
